name: Production

on:
  push:
    tags:
      - 'v*.*.*'

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-c
  GKE_CLUSTER: footyhints
  REGISTRY_HOSTNAME: gcr.io

jobs:
  dockerhub:
    name: Push to Dockerhub
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Set release information from the tag
    - name: Set TAG_VERSION env
      run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
    - name: Set NUMBER_VERSION env
      run: echo ::set-env name=NUMBER_VERSION::$(echo $RELEASE_VERSION | cut -c 2-)

    - name: Login to DockerHub
      run: make login-dockerhub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build images
      run: make build-release-images REGISTRY=footyhints/ HASH=$NUMBER_VERSION

    - name: Push images to DockerHub
      run: make push-release-images REGISTRY=footyhints/ HASH=$NUMBER_VERSION


  gke:
    name: Deploy to GKE
    needs: dockerhub
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - name: Setup docker to authenticate to gcloud
      run: gcloud auth configure-docker

    - name: Auth to gcloud
      run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT

    - name: Create deployment
      run: kubectl apply -f $GITHUB_WORKSPACE/docker/deployment.yml

    - name: Update deployment
      run: |
        kubectl rollout restart deployment/cron -n footyhints
        kubectl rollout restart deployment/flask -n footyhints
        kubectl rollout restart deployment/nginx -n footyhints
